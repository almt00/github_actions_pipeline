name: MP1 Pipeline
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]

jobs:

  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: dependencies cache
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-cache-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Install dependencies
        continue-on-error: false
        run: npm install

      #- name: Install dependencies
      #  run: npm install

  jest-test-job:
   runs-on: ubuntu-latest
   needs: [install]
   steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: dependencies cache
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        path: node_modules/
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

    - name: test jest
      run: npm run test

  format-test-job:
   runs-on: ubuntu-latest
   needs: [install]
   steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: dependencies cache
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        path: node_modules/
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

    - name: test prettier
      run: npm run format

  lint-test-job:
   runs-on: ubuntu-latest
   needs: [install]
   steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: dependencies cache
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        path: node_modules/
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

    - name: test linter
      run: npm run lint
  
  build:
    runs-on: ubuntu-latest
    needs: [install,jest-test-job,format-test-job,lint-test-job]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: dependencies cache
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - run: npm run build
      - name: Save build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: out/


  